kind: pipeline
type: kubernetes
name: demo-2048

# 跳过验证证书，根据实际情况要或不要，github不需要
clone:
  skip_verify: true

# 选择pipeline跑在demo命名空间里
metadata:
  namespace: demo

# node选择
node_selector:
  kubernetes.io/hostname: slave-14

# 挂载本地目录
volumes:
- name: cache
  host:
    path: /data/cache

# 第一阶段：构建代码
steps:
  - name: build code
    image: maven:3.6-jdk-8
    # 在容器里执行的shell命令列表  
    commands:
    - mvn clean install -DskipTests=true
    - cd target && jar -xf 2048.war
    - ls -l
    # 在容器里挂载目录
    volumes:
      - name: cache
        path: /root/.m2

# 第二阶段: 构建镜像&推送镜像
  - name: build image & push
    image: plugins/docker     # docker插件
    settings:
      # 镜像仓库组名称
      repo: 10.24.2.14/demo/demo-2048
      # 镜像仓库名称
      registry: 10.24.2.14
      # 在web界面中设置的密钥        
      username:
        from_secret: admin    
      password:
        from_secret: Harbor12345
      # 镜像tag定义
      tags:
        - ${DRONE_BRANCH}-${DRONE_COMMIT}-${DRONE_BUILD_NUMBER}
      # 启用非ssl加密
      insecure: true
      # 构建镜像的dockerfile文件
      dockerfile: ./Dockerfiles/Dockerfile

# 第三阶段: 服务滚动更新
  - name: k8s-deploy
    # Kubernetes插件
    image: danielgormly/drone-plugin-kube:0.2.0
    settings:
      build_tag: ${DRONE_BRANCH}-${DRONE_COMMIT}-${DRONE_BUILD_NUMBER}
      # yaml模板
      template: template/demo-2048.yaml
      # apiserver地址    
      server: https://10.24.2.14:6443
      # Kubernetes服务帐户令牌 'kubectl get secret -nkube-system|grep token'
      token:
        from_secret: eyJhbGciOiJSUzI1NiIsImtpZCI6Inc2V091LV9KelJNbjlGejNQT3IwLXVGdUR0dUpXV2xjbnhrc3plQmdlejAifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJuYW1lc3BhY2UtY29udHJvbGxlci10b2tlbi12cjdyayIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJuYW1lc3BhY2UtY29udHJvbGxlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjNhODdmZDE1LTNmOWMtNGY5ZS1hNDkzLTQyNjAwY2FiMWYxNCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTpuYW1lc3BhY2UtY29udHJvbGxlciJ9.mEjeSvKiCp_VDDo2ApYHPA-k9Pgz36bcAxLYaFy6b8SS6uCgDfalENVgfF149espXNyUcr42gQl4KJ2IVib68D6z5YIa-YgcwI85XM1wcMaKLBk1E5eIBgrnEccPGtcC74AG1qRdoXuvYemdsBQg02vARcR7vFjRiGM7uM82ncWmysCUQk2zQvcjG7Nw4n76fF8-YIkX19qpNiZPrPsG3ZkxU52CcxLZ3asLbxTgszuaSng0UFPZkB47sUEFcFfpYy344At2QM-ZZ4uz6PxUy-ug7ZB9bT1nFixDmcHZpZFN3HA0R37RK93uktECEGSb6ZSJ1innYetmo9FBFM37EQ
      # K8s CA证书的Base-64编码的字符串
      ca:
        from_secret: TUlJQy9qQ0NBZWFnQXdJQkFnSUJBREFOQmdrcWhraUc5dzBCQVFzRkFEQVZNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXlNREV5TmpBeE1URXlNMW9YRFRNeU1ERXlOREF4TVRFeU0xb3dGVEVUTUJFR0ExVUVBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpqN2g5dEJVTm9XeTN3MGsyamV4Njg4ZFZJQmQwTWh6NkZWWTBna0ZYbGxRdU0rMVVlQURGVFM4cEJOU3lpVEFiRXNZc0kvTFVydkRqL0trZmdka0I3Y1FPZk1oRzB4ZXhwS3dNVzdCdHZqZEtCSjlaQU5GVnE3RE44L1grSnVKd045cVJUS0NDSG1xRm5EYkpuNk5aenpKSEFzQm4xZ3VoaXpUOFNIa1hRczhwS0pQZGUwV2VFNlJBTUoxODVVd0JUVDQxdVM3T1lZSHRReVFQN0hVT3BUYW16WGVla0JtaDMwZWVNN0h2bkZXdW1VUU5yT0JDeVV2RnRUNUwxZWt2aG1KbHJqNnQxaWs0dlF2TDhIdzBGUTd3MitEOCs2WFk5bDAwNmR5VmJvcDV5eFV2MGxKNjBGdnczQzVhdExyTG82Rmx2YlEvWk9vMnFjbjJOTVZrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkRFY2RJRFR0ZEpGNkdOd3dkQTZGaDVkQUUwSU1CVUdBMVVkRVFRT01BeUNDbXQxWW1WeWJtVjBaWE13RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNzdnpSMlBOS0VEVjdrQkVJRUFUbHVQdndNUDdMcEcyZUN0MlZNTTBBZ3kyblRyelA2RDJrbkxwcW1QTDViVXhQM0U2SkFFY2NlZllSRVdnYjl0SHlmRUhSNGZPNUFuYTI0QStndVYvY2dqOFNKL1RkaWljRkg1a1pDeURNZ1RNNWhxeWMzYm15ODBMUE5RSW0wZTkrQ3dHRFA3V0NGaytyL2JBS1U4cHZKY2dqcjBvUjBSSHIvWEZna241UncyZG5UcEoyc3FwRDlFWGxNSmN6TStEMmUwb0x1UjF6eURKL2NoODVlTzViU1JMKzlqWndRbWRId21kekVVTmVFZ3pWSGxLcTE2MkZZNlB5YWM3Q2ZrZ1JRUlpYcXJJbkl0ZldKOGV5d3BnR0RpRTJsZlk4Nk5qek9oUjhBUGxXREcxd1ViakpsZWVRVSt1Y2RWMncvMUNsbz0K  



# 通过分支限制pipeline执行
trigger:
  branch:
  - drone
