stages:
  - package
  - docker_build
  - deploy_k8s_demo
  - deploy_k8s_server


variables:
  KUBECONFIG: /etc/deploy/config
  MAVEN_OPTS: "-Dmaven.repo.local=/opt/cache/.m2/repository"
mvn_build_job:
  image: 10.24.2.3/demo/maven:3.6-jdk-8
  stage: package
  only:
    - drone
  tags:
    - k8s-runner
  script:
    - ls /opt/cache/.m2/repository
    - mvn clean install -DskipTests=true
    -  cp -rfv target/ /opt/cache
#    - cd target && jar -xf 2048.war


docker_build_job:
  image: docker:latest
  stage: docker_build
  only:
    - drone
  tags:
    - k8s-runner
  script:
    - mkdir target
    - cp -rfv /opt/cache/target/2048 target/
    - cp /opt/cache/target/2048.war target/2048.war
    - ls && pwd
    - docker login -u $REGISTRY_USERNAME -p $REGISTRY_PASSWORD 10.24.2.3
    - mv Dockerfiles/Dockerfile .
    - pwd
    - docker build -t 10.24.2.3/demo/demo-2048:v1.0 .
    - docker push 10.24.2.3/demo/demo-2048:v1.0

deploy_k8s_demo:
  image: kubectl:1.16.6
  stage: deploy_k8s_demo
  only:
    - drone
  tags:
    - k8s-runner
  script:
    - mkdir -p /etc/deploy
    - echo $kube_config |base64 -d > $KUBECONFIG
    - kubectl apply -f template/demo-2048.yaml

deploy_k8s_server:
  image: kubectl:1.16.6
  stage: deploy_k8s_server
  only:
    - drone
  tags:
    - k8s-runner
  script:
    - mkdir -p /etc/deploy
    - echo $kube_config |base64 -d > $KUBECONFIG
    - kubectl apply -f template/service.yaml


